package core.communication.access.stzsecu;

import com.ecc.emp.core.EMPException;
import com.sscc.fdep.mrapi;
import common.util.SFConst;

import core.cache.CacheMap;
import core.log.SFLogger;

/**
 * 深证通轮训服务
 * @author ex_xxkjb_wh
 *
 */
public class SZTSocketPolling implements Runnable {
	SFLogger logger=SFLogger.getLogger(SFConst.DEFAULT_TRXCODE);
	public void run(){
        try {
			while(true)
		    {
				byte[] respData = null;
				//Mr2Receive1的第一个参数为本应用的应标识 
				respData = receive();
				String result = new String(respData);

	            if(result.length()>9)
	            { 
	            	SFLogger.info(SFConst.DEFAULT_TRXCODE, null, "STZSocketPolling recv data:" + result+"^");
	            	//处理请求数据
	            	SZTRequestHandler handler = new SZTRequestHandler();
	            	handler.handleRequest(respData);
	            }
				try {
					Thread.sleep(1000);
				} catch (InterruptedException e) {
					logger.error(e.getMessage());
				}
		    }
			
		} catch (EMPException e1) {
			logger.error(e1.getMessage());
		}
	}
	/**
	 * 
	 * @return
	 * @throws EMPException
	 */
	public byte[] receive() throws EMPException{
		SZTAccessParam sztParam=CacheMap.getCache("SZT_ACCESS_PARAM");
		String appId = sztParam.getRecvApp();
//		byte[] respData = mrapi.Mr2Receive1("app2", "", "", "", "", "","<EMPTY>", "", "", 2000);
		byte[] respData = mrapi.Mr2Receive1(appId, "", "", "", "", "","<EMPTY>", "", "", 2000);
		return respData;
	}
	
}
