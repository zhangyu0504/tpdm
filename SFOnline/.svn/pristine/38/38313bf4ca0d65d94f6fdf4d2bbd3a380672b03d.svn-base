package module.communication;

import java.sql.Connection;
import java.util.Map;

import module.bean.AgtAgentInfo;
import module.dao.AgtAgentInfoDao;

import com.ecc.emp.core.Context;
import common.exception.SFException;
import common.util.SFConst;
import common.util.SFUtil;

import core.communication.access.tcpip.TCPIPSendAction;
import core.log.SFLogger;
/**
 * 合作行消费端处理类
 * @author 汪华
 *
 */
public abstract class CoBankClientBase {
	/**
	 * 发送报文统一入口
	 * @param context
	 * @param msg
	 * @return
	 * @throws SFException
	 */
	public Context send(Context context,Map<String,Object>msg,String bankNo)throws SFException{
		//私有业务处理方法：组装输入报文，定义服务号与场景号
		return doHandle(context,msg,bankNo);
	}
	
	
	/**
	 * 实际发送报文
	 * @param context
	 * @param msg
	 * @param msgCode
	 * @param serviceCode
	 * @return
	 * @throws SFException
	 */
	protected Context send(Context context,Map<String,Object>msg,String msgCode,String bankNo)throws SFException{
		/*
		 * 克隆新的通信上下文
		 */
		Context msgContext=SFUtil.cloneMsgContext(context, msg);
		try{
			/*
			 * 根据合作行编号查询合作行信息
			 */
			AgtAgentInfoDao agentDao = new AgtAgentInfoDao();
			
			Connection tranConnection=SFUtil.getDataValue(context,SFConst.PUBLIC_TRAN_CONNECTION);//从上下文中获取数据库联接，不需要私有交易关闭联接
			AgtAgentInfo agtAgent  = agentDao.qryAgtAgentInfo(context, tranConnection, bankNo);
			//判断合作行是否存在
			if(agtAgent==null){
				SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG, SFConst.RET_OVERTIME);
				SFLogger.error(msgContext, String.format("上合作行执行【%s】报文失败，合作行【%s】不存在！", msgCode, bankNo));
				return msgContext;
			}

			/*
			 * 发送报文
			 */
			TCPIPSendAction access=  new TCPIPSendAction();
			access.setHostIP(agtAgent.getBankIp());
			access.setHostPort(agtAgent.getBankPort());
			access.setSvrCode(msgCode);
			access.setBankNo(bankNo);
			access.doExecute(msgContext);
		}catch(Exception e){
			SFLogger.error(msgContext, String.format("上合作行执行【%s】报文失败，%s", msgCode, e.getMessage()));

			/*
			 * 设置返回值
			 */
			//填充响应结果至公共上下文
			String retCode = SFUtil.getDataValue(msgContext,"A_RESPONSE_HEAD.RESPCODE");//从响应报文中取响应码
			String retMsg= SFUtil.getDataValue(msgContext,"A_RESPONSE_HEAD.RESPMSG");//从响应报文中取响应信息
			String retFlag=SFUtil.getDataValue(context,SFConst.PUBLIC_RET_FLAG);//手工设置超时
			if(SFConst.RESPCODE_TIMEOUT_COBANK.equals(retCode)){//超时
				SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG, SFConst.RET_OVERTIME);
			}else if(SFConst.RET_OVERTIME.equals(retFlag)){
				//SFUtil.setDataValue(msgContext,"A_RESPONSE_HEAD.RESPMSG",SFConst.RESPCODE_TIMEOUT_COBANK);//从响应报文中取响应信息
				//SFUtil.setDataValue(context,SFConst.PUBLIC_RET_FLAG,"合作行响应报文失败");//手工设置超时
				retCode=SFConst.RESPCODE_TIMEOUT_COBANK;
				retMsg="合作行响应报文失败";
			}else{
				SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG, SFConst.RET_FAILURE);//增加errorMSG参数
			}
			
			SFUtil.setDataValue(msgContext, SFConst.CTX_ERRCODE, retCode);
			SFUtil.setDataValue(msgContext, SFConst.CTX_ERRMSG, retMsg);
			return msgContext;
		}
		/*
		 * 设置返回值
		 */
		//填充响应结果至公共上下文
		String retCode = SFUtil.getDataValue(msgContext,"A_RESPONSE_HEAD.RESPCODE");//从响应报文中取响应码
		String retMsg= SFUtil.getDataValue(msgContext,"A_RESPONSE_HEAD.RESPMSG");//从响应报文中取响应信息
		String retFlag=SFUtil.getDataValue(context,SFConst.PUBLIC_RET_FLAG);//手工设置超时
		if(SFConst.RESPCODE_SUCCCODE_COBANK.equals(retCode)){//成功
			SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG, SFConst.RET_SUCCESS);
		}else if(!SFConst.RET_OVERTIME.equals(retFlag)
				&&!SFConst.RESPCODE_SUCCCODE_COBANK.equals(retCode)
				&&!SFConst.RESPCODE_TIMEOUT_COBANK.equals(retCode)){//失败
			SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG, SFConst.RET_FAILURE);//增加errorMSG参数
		}else if(SFConst.RESPCODE_TIMEOUT_COBANK.equals(retCode)||SFConst.RET_OVERTIME.equals(retFlag)){//超时
			SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG, SFConst.RET_OVERTIME);
			//SFUtil.setDataValue(msgContext,"A_RESPONSE_HEAD.RESPMSG",SFConst.RESPCODE_TIMEOUT_COBANK);//从响应报文中取响应信息
			// SFUtil.setDataValue(msgContext,SFConst.PUBLIC_RET_FLAG,"合作行响应报文失败");//手工设置超时
			retCode=SFConst.RESPCODE_TIMEOUT_COBANK;
			retMsg="合作行响应报文失败";
		}
		SFUtil.setDataValue(msgContext, SFConst.CTX_ERRCODE, retCode);
		SFUtil.setDataValue(msgContext, SFConst.CTX_ERRMSG, retMsg);
		return msgContext;
	}
	
	/**
	 * 私有业务处理方法：组装输入报文，定义服务号与场景号
	 * @param context
	 * @param msgCode
	 * @param serviceCode
	 * @return
	 * @throws SFException
	 */
	protected abstract Context doHandle(Context context,Map<String,Object>msg,String bankNo)throws SFException;
}
